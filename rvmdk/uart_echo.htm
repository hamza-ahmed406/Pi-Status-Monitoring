<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\uart_echo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\uart_echo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Wed Jul 12 19:46:09 2017
<BR><P>
<H3>Maximum Stack Usage =         44 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; configPiStatusGPIO &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[c]">Reset_Handler</a>
 <LI><a href="#[2]">NmiSR</a>
 <LI><a href="#[3]">FaultISR</a>
 <LI><a href="#[4]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NmiSR</a><BR>
 <LI><a href="#[3]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">FaultISR</a><BR>
 <LI><a href="#[4]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[4]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 110 times from startup_rvmdk.o(RESET)
 <LI><a href="#[2]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[9]">PiStatusTimerInterrupt</a> from main.o(i.PiStatusTimerInterrupt) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[c]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[5]">SchedulerSysTickIntHandler</a> from scheduler.o(i.SchedulerSysTickIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[7]">UART0IntHandler</a> from uartconfiguration.o(i.UART0IntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[8]">WatchdogIntHandler</a> from main.o(i.WatchdogIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[a]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[b]">piCurrStateBlink</a> from main.o(i.piCurrStateBlink) referenced from main.o(.data)
 <LI><a href="#[6]">piStatusGPIOInterrupt</a> from main.o(i.piStatusGPIOInterrupt) referenced from startup_rvmdk.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[c]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[30]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[10]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[31]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[32]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[33]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[34]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[35]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[36]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[12]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>

<P><STRONG><a name="[2d]"></a>GPIOIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piStatusGPIOInterrupt
</UL>

<P><STRONG><a name="[25]"></a>GPIOIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configPiStatusGPIO
</UL>

<P><STRONG><a name="[24]"></a>GPIOIntTypeSet</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntTypeSet))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configPiStatusGPIO
</UL>

<P><STRONG><a name="[13]"></a>GPIOPadConfigSet</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>

<P><STRONG><a name="[11]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPinTypeGPIOInput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configPiStatusGPIO
</UL>

<P><STRONG><a name="[14]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configPiStatusGPIO
</UL>

<P><STRONG><a name="[15]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piCurrStateBlink
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configPiStatusGPIO
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piStatusGPIOInterrupt
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PiStatusTimerInterrupt
</UL>

<P><STRONG><a name="[9]"></a>PiStatusTimerInterrupt</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.PiStatusTimerInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PiStatusTimerInterrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SchedulerElapsedTicksCalc</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scheduler.o(i.SchedulerElapsedTicksCalc))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerElapsedTicksGet
</UL>

<P><STRONG><a name="[16]"></a>SchedulerElapsedTicksGet</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, scheduler.o(i.SchedulerElapsedTicksGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SchedulerElapsedTicksGet
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerElapsedTicksCalc
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerRun
</UL>

<P><STRONG><a name="[18]"></a>SchedulerInit</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, scheduler.o(i.SchedulerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SchedulerInit &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d]"></a>SchedulerRun</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, scheduler.o(i.SchedulerRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SchedulerRun &rArr; SchedulerElapsedTicksGet
</UL>
<BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerElapsedTicksGet
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerSysTickIntHandler
</UL>

<P><STRONG><a name="[5]"></a>SchedulerSysTickIntHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, scheduler.o(i.SchedulerSysTickIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SchedulerSysTickIntHandler &rArr; SchedulerRun &rArr; SchedulerElapsedTicksGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SysCtlClockGet</STRONG> (Thumb, 250 bytes, Stack size 4 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerInit
</UL>

<P><STRONG><a name="[1b]"></a>SysTickEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerInit
</UL>

<P><STRONG><a name="[1c]"></a>SysTickIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerInit
</UL>

<P><STRONG><a name="[1a]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerInit
</UL>

<P><STRONG><a name="[2b]"></a>SysTick_Init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, systick.o(i.SysTick_Init))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>SysTick_Wait</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, systick.o(i.SysTick_Wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_delay_us
</UL>

<P><STRONG><a name="[1e]"></a>SysTick_delay_us</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, systick.o(i.SysTick_delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SysTick_delay_us &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogIntHandler
</UL>

<P><STRONG><a name="[27]"></a>TimerClockSourceSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(i.TimerClockSourceSet))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configPiStatusTimer
</UL>

<P><STRONG><a name="[28]"></a>TimerLoadSet64</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(i.TimerLoadSet64))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configPiStatusTimer
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piStatusGPIOInterrupt
</UL>

<P><STRONG><a name="[7]"></a>UART0IntHandler</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, uartconfiguration.o(i.UART0IntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART0IntHandler &rArr; ustrstr &rArr; ustrncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrstr
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrcmp
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;responseRead
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>UARTStdioConfig</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, uartstdio.o(i.UARTStdioConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTStdioConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUART
</UL>

<P><STRONG><a name="[8]"></a>WatchdogIntHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(i.WatchdogIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = WatchdogIntHandler &rArr; SysTick_delay_us &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_delay_us
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[38]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[39]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[23]"></a>configPiStatusGPIO</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, main.o(i.configPiStatusGPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = configPiStatusGPIO &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntTypeSet
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>configPiStatusTimer</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, main.o(i.configPiStatusTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = configPiStatusTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet64
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerClockSourceSet
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29]"></a>configUART</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, uartconfiguration.o(i.configUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = configUART &rArr; UARTStdioConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c]"></a>configWatchDog</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, main.o(i.configWatchDog))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = configWatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a]"></a>main</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = main &rArr; configPiStatusGPIO &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUART
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerInit
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configWatchDog
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configPiStatusTimer
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configPiStatusGPIO
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[b]"></a>piCurrStateBlink</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.piCurrStateBlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = piCurrStateBlink
</UL>
<BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>piStatusGPIOInterrupt</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, main.o(i.piStatusGPIOInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = piStatusGPIOInterrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet64
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>responseRead</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uartconfiguration.o(i.responseRead))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0IntHandler
</UL>

<P><STRONG><a name="[20]"></a>ustrcmp</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, ustdlib.o(i.ustrcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ustrcmp &rArr; ustrncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0IntHandler
</UL>

<P><STRONG><a name="[2f]"></a>ustrlen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ustdlib.o(i.ustrlen))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrstr
</UL>

<P><STRONG><a name="[2e]"></a>ustrncmp</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ustdlib.o(i.ustrncmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ustrncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrstr
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrcmp
</UL>

<P><STRONG><a name="[21]"></a>ustrstr</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ustdlib.o(i.ustrstr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ustrstr &rArr; ustrncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrncmp
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrlen
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0IntHandler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
